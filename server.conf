server {
    server_name admin.cofynd.com;
    return 301 https://admin.cofynd.com$request_uri;
}

server {
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/cofynd.com-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cofynd.com-0002/privkey.pem;

    server_name  admin.cofynd.com;

    root /home/ubuntu/cofynd/distnew/;
    index index.html;

    location / {
        try_files $uri $uri/ @ci_index;
    }

    location @ci_index {
      rewrite ^(.*) /index.html?$1 last;
    }
}

server {
    listen 443 ssl;
    server_name  api.cofynd.com;

    ssl_certificate /etc/letsencrypt/live/cofynd.com-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cofynd.com-0002/privkey.pem;

    location / {
        proxy_pass http://localhost:6000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen 80;
}

upstream frontend_ssr {
    server 127.0.0.1:5000;
}

server {
    server_name www.cofynd.com cofynd.com;
    return 301 https://cofynd.com$request_uri;
}

server {
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/cofynd.com-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cofynd.com-0002/privkey.pem;
    server_name www.cofynd.com;
    return 301 https://cofynd.com$request_uri;
}

server {
    listen 443 ssl;
    server_name  cofynd.com;

    ssl_certificate /etc/letsencrypt/live/cofynd.com-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cofynd.com-0002/privkey.pem;

    root /home/ubuntu/cofynd-angular-frontend/distnew/browser;

    location / {
        try_files $uri $uri @static_files;
    }

    location @static_files {
      proxy_pass http://frontend_ssr;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_http_version 1.1;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      proxy_redirect off;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

}
